name: Deploy MkDocs to AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout repository with submodules
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.ORG_TOKEN }}
        submodules: recursive
        fetch-depth: 0

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    # Install dependencies and build MkDocs site
    - name: Build MkDocs site
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        mkdocs build --clean

    # Deploy site to EC2
    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      run: |
        sudo apt-get update
        
        sudo apt-get install -y openssh-client rsync

        # Setup SSH key
        mkdir -p ~/.ssh
        echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

        # Create deployment directory on EC2 if missing
        ssh -i ~/.ssh/id_rsa $EC2_USERNAME@$EC2_HOST \
          "sudo mkdir -p $DEPLOY_PATH && sudo chown $EC2_USERNAME:$EC2_USERNAME $DEPLOY_PATH"

        # Sync site to EC2
        rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa" ./site/ $EC2_USERNAME@$EC2_HOST:$DEPLOY_PATH/

        echo "Deployment completed successfully!"
